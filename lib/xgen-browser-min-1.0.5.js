
var XGenPath=function(xGenPath,dotIsClass){this._position=0;this._steps=[];this._xGenPath=xGenPath;this._dotIsClass=typeof dotIsClass=='undefined'?true:dotIsClass;if(xGenPath){var steps=xGenPath.split("/");for(var step in steps){this._steps.push(new XGenPathStep(steps[step],this._dotIsClass));}}};XGenPath.prototype.getStep=function(){if(this._position>=this._steps.length){return null;}
return this._steps[this._position];};XGenPath.prototype.next=function(){var newPath=new XGenPath(null,this.dotIsClass);newPath._position=this._position+1;newPath._steps=this._steps;return newPath;};XGenPath.prototype.isTail=function(){return this._position==this._steps.length-1;};var XGenPathStep=function(step,dotIsClass){this.element;this.attributes=null;this.arrayLength=1;this.parse(step,dotIsClass);if(this.element===null||this.element===""){throw new Error("Element name missing in step");}};XGenPathStep.prototype.parse=function(step,dotIsClass){var stepPart=step;if(step.lastIndexOf("]")===step.length-1){var arraySize=stepPart.substring(stepPart.lastIndexOf('[')+1,stepPart.lastIndexOf(']'));try{this.arrayLength=parseInt(arraySize);}catch(err){throw new Error("Array index invalid parsing step "+step);}
stepPart=stepPart.substring(0,step.lastIndexOf('['));}
if(stepPart.lastIndexOf("}")===stepPart.length-1){this.attributes={};var attsString=stepPart.substring(stepPart.lastIndexOf('{')+1,stepPart.lastIndexOf('}'));stepPart=stepPart.substring(0,step.lastIndexOf('{'));var atts=attsString.split(",");for(var a=0;a<atts.length;a++){var nameVal=atts[a].split("=");try{this.attributes[nameVal[0]]=nameVal[1];}catch(err){throw new Error("Attribute syntax invalid parsing step "+step);}}}
if(stepPart.indexOf('#')>-1){if(this.attributes===null){this.attributes={};}
this.attributes.id=stepPart.substring(stepPart.indexOf('#')+1);stepPart=stepPart.substring(0,stepPart.indexOf('#'));}
if(dotIsClass&&stepPart.indexOf('.')>-1){if(this.attributes===null){this.attributes={};}
this.attributes.class=stepPart.substring(stepPart.indexOf('.')+1);stepPart=stepPart.substring(0,stepPart.indexOf('.'));}
this.element=stepPart;};XGenPathStep.prototype.getAttributes=function(){return this.attributes;};XGenPathStep.prototype.getElement=function(){return this.element;};XGenPathStep.prototype.getArrayLength=function(){return this.arrayLength;};var XGenNodeList=function(xGen,nodeList){this.xGen=xGen;this.length=0;if(nodeList)this.addElements(nodeList);};XGenNodeList.createSingleNodeList=function(xGen,node){var xGenNodeList=new XGenNodeList(xGen);xGenNodeList.add(node);return xGenNodeList;};XGenNodeList.prototype.item=function(index){return this[index];};XGenNodeList.prototype.add=function(node){if(typeof node==='undefined')return;Array.prototype.push.call(this,node);};XGenNodeList.prototype.addElements=function(nodeList){if(typeof nodeList==='undefined')return;if(typeof nodeList.item==='function'&&typeof nodeList.length==='number'){for(var i=0;i<nodeList.length;i++){Array.prototype.push.call(this,nodeList.item(i));}}
else if(typeof nodeList.length==='number'){for(var i=0;i<nodeList.length;i++){Array.prototype.push.call(this,nodeList[i]);}}
else if(typeof nodeList.appendChild==='function'){Array.prototype.push.call(this,nodeList);}
else{throw new Error("Context type not supported: "+typeof nodeList);}};XGenNodeList.prototype.setTextContent=function(){for(var i=0;i<this.length;i++){var node=this[i];var string="";if(arguments.length===0){return;}
if(arguments.length===1){string=arguments[0];}
else{string=arguments[i];}
if(typeof string=='undefined')return;var textNode=this.xGen.document.createTextNode(string);node.appendChild(textNode);}
return this;};XGenNodeList.prototype.setAttribute=function(name,value){for(var i=0;i<this.length;i++){var node=this[i];node.setAttribute(name,value);}
return this;};XGenNodeList.prototype.setAttributes=function(arr){for(var i=0;i<this.length;i++){var node=this[i];var idx=arr.length>1?i:0;var atts=arr[idx];for(var att in atts){node.setAttribute(att,atts[att]);}}
return this;};XGenNodeList.prototype.appendChild=function(newChild){var tailNodes=new XGenNodeList(this.xGen);for(var i=0;i<this.length;i++){var node=this[i];var clone=newChild.cloneNode(true);node.appendChild(clone);tailNodes.add(clone);}
return tailNodes;};XGenNodeList.prototype.each=function(callback){var tailNodes=new XGenNodeList(this.xGen);for(var i=0;i<this.length;i++){tailNodes.add(callback(i,this[i],this.xGen));}
return tailNodes;};XGenNodeList.prototype.create=function(xGenPath){return this.xGen.create(this,xGenPath);};XGenNodeList.prototype.select=function(xPath){var xGenNodeList=new XGenNodeList(this.xGen);for(var i=0;i<this.length;i++){var node=this[i];xGenNodeList.addElements(this.xGen.select(node,xPath));}
return xGenNodeList;};var XGen=function(arg){this.document=null;if(typeof arg==='undefined'&&DOMImplementation){this.document=new DOMImplementation().createDocument();}
else if(arg.createDocument){this.document=arg.createDocument();}
else if(arg.documentElement&&arg.documentElement.nodeName==='HTML'&&arg.title){this.document=arg;}
else if(arg.createElement){this.document=arg;}
else{throw new Error("Unsupported constructor "+arg);}
this.outputEncoding="UTF-8";this.outputIndent="yes";this.outputMethod="xml";this.selectMode=XGen.QRY_MODE_XPATH;};XGen.QRY_MODE_XPATH=1;XGen.QRY_MODE_SELECTOR=2;XGen.prototype.configure=function(options){if(!options){if(typeof window!=='undefined'&&typeof window.document!=='undefined'){this.selectMode=XGen.QRY_MODE_SELECTOR;this.outputMethod="html";return this;}
options={};}
this.outputEncoding=options.outputEncoding||"UTF-8";this.outputIndent=options.outputIndent||"yes";this.outputMethod=options.outputMethod||"xml";this.selectMode=options.selectMode||XGen.QRY_MODE_XPATH;return this;};XGen.prototype.newDocument=function(xGenPath){if(this.getRoot()!==null){throw new Error("Document already exists");}
if(xGenPath.charAt(0)!=="/"){throw new Error("New document needs an absolute path to start");}
var parsedGenPath=new XGenPath(xGenPath.substring(1),this._dotIsClass());if(parsedGenPath.getStep().getArrayLength()!=1){throw new Error("Must be only one root element");}
var root=this.document.createElement(parsedGenPath.getStep().getElement());var atts=parsedGenPath.getStep().getAttributes();if(atts!=null){this._setAttributes(root,atts);}
this.document.appendChild(root);var tailNodes=new XGenNodeList(this);var context=XGenNodeList.createSingleNodeList(this,root);this._createPath(context,parsedGenPath.next(),tailNodes);if(tailNodes.length==0){tailNodes.add(root);}
return tailNodes;};XGen.prototype.getRoot=function(){return this.document.documentElement;};XGen.prototype.create=function(){var tailNodes=new XGenNodeList(this);var xGenPath;var context;if(arguments.length===0){throw new Error("Missing xGenPath in create()");}
if(arguments.length===1){xGenPath=arguments[0];context=XGenNodeList.createSingleNodeList(this,this.getRoot());}
else{xGenPath=arguments[1];context=new XGenNodeList(this);context.addElements(arguments[0]);}
this._create(context,xGenPath,tailNodes);return tailNodes;};XGen.prototype.select=function(){var path;var context;if(arguments.length===0){throw new Error("Missing path in select()");}
if(arguments.length===1){path=arguments[0];context=this.getRoot();}
else{path=arguments[1];context=arguments[0];}
if(this.selectMode===XGen.QRY_MODE_SELECTOR){return this._selectQuerySelector(context,path);}
else if(this.selectMode===XGen.QRY_MODE_XPATH){return this._selectXPath(context,path);}
else{return this._selectXPath(context,path);}};XGen.prototype.serialize=function(indent){var xmlSerializer=indent?new XMLSerializer2():new XMLSerializer();xmlSerializer.indent=indent;return xmlSerializer.serializeToString(this.document);};XGen.prototype._selectXPath=function(context,xPath){var nodeList=xpath.select(xPath,context);return new XGenNodeList(this,nodeList);};XGen.prototype._selectQuerySelector=function(context,querySelector){var nodeList=context.querySelectorAll(querySelector);return new XGenNodeList(this,nodeList);};XGen.prototype._create=function(context,xGenPath,tailNodes){if(xGenPath.charAt(0)==="<"){this._insert(context,xGenPath);}else{var parsedPath=new XGenPath(xGenPath,this._dotIsClass());this._createPath(context,parsedPath,tailNodes);}};XGen.prototype._createPath=function(context,xGenPath,tailNodes){var step=xGenPath.getStep();if(step==null)return;for(var i=0;i<context.length;i++){var node=context.item(i);var generatedElements=this._createPathStep(node,step);this._createPath(generatedElements,xGenPath.next(),tailNodes);if(xGenPath.isTail()){tailNodes.addElements(generatedElements);}}};XGen.prototype._insert=function(context,xml){var doc=new DOMParser().parseFromString(xml,'application/xml');for(var i=0;i<context.length;i++){var nextNode=context.item(i);nextNode.appendChild(doc.documentElement.cloneNode(true));}};XGen.prototype._createPathStep=function(node,step){var generatedNodes=new XGenNodeList(this);for(var i=0;i<step.getArrayLength();i++){var element=this.document.createElement(step.getElement());node.appendChild(element);if(step.getAttributes()!=null){this._setAttributes(element,step.getAttributes());}
generatedNodes.add(element);}
return generatedNodes;};XGen.prototype._setAttributes=function(elem,atts){for(var key in atts){elem.setAttribute(key,atts[key]);}};XGen.prototype._dotIsClass=function(){return"html"===this.outputMethod;};XGen.newXmlDocument=function(){return window.document.implementation.createDocument(null,null,null);};if(!window.DOMParser){var DOMParser=function(){};DOMParser.prototype.parseFromString=function(xml){var xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async=false;xmlDoc.loadXML(xml);return xmlDoc;};};if(typeof $==='function'&&jQuery===$){XGenNodeList.prototype.$=function(){return $(this);};XGen.prototype._selectQuerySelector=function(context,querySelector){var nodeList=$(querySelector,context);return new XGenNodeList(this,nodeList);};jQuery.xGen=new XGen(window.document).configure();jQuery.prototype.create=function(xGenPath){return $(jQuery.xGen.create(this,xGenPath));};}